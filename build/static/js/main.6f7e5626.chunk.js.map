{"version":3,"sources":["components/Button.js","components/Blog.js","services/blogs.js","services/login.js","services/users.js","components/InputField.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","services/comment.js","components/Blogdetail.js","reducers/notificationReducer.js","reducers/blogReducer.js","reducers/userReducer.js","reducers/usersReducer.js","components/Notification.js","components/Users.js","components/UserBlog.js","App.js","store.js","index.js"],"names":["Button","type","onClick","children","class","Blog","blog","updateLike","removeBlog","usercheck","useState","to","id","title","baseUrl","token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","console","log","update","put","setToken","newToken","remove","delete","login","credentials","getUsers","res","InputField","label","value","onChange","name","htmlFor","LoginForm","handleLogin","inputValue","setInputValue","handleInputChange","event","target","prevValues","onSubmit","preventDefault","username","password","err","error","BlogForm","createBlog","preV","author","url","Togglable","React","forwardRef","ref","btnText","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","className","style","displayName","addComment","content","fetchComment","Blogdetail","blogdetail","addLike","comment","setComment","showcomment","setShowComment","useEffect","commentService","fetch","likes","updatedBlog","aria-describedby","map","setNotification","message","delay","dispatch","setTimeout","removeNotification","notificationReducer","state","action","clearTimeout","likeBlog","blogService","delBlog","blogReducer","userLogin","loginService","user","userReducer","usersReducer","Notification","notification","useSelector","Users","users","blogs","length","UserBlog","userBlog","App","useDispatch","blogFormRef","createRef","usersService","window","localStorage","setItem","JSON","stringify","getItem","handleLogout","removeItem","confirm","match","useRouteMatch","find","params","blogmatch","href","exact","path","scope","newBlog","sort","b","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"+NAYeA,EARA,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC/B,OACA,wBAAQF,KAAMA,EAAMC,QAASA,EAASE,MAAM,0BAA5C,SACGD,K,QCiDUE,EAlDF,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,KAA6C,KAAvCC,WAAuC,EAA3BC,WAA2B,EAAfC,UACLC,oBAAS,IADW,6BAqB1D,OACE,+BACE,8BACE,cAAC,IAAD,CAAMC,GAAE,iBAAYL,EAAKM,IAAMR,MAAM,kBAArC,SACGE,EAAKO,a,iBC9BVC,EAAU,aAEZC,EAAQ,KAmCG,GAAEC,OA7BL,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAAIL,GADpB,cACPM,EADO,yBAENA,EAASC,MAFH,2CAAH,qDA6BaC,OAxBb,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAFf,SAKUG,IAAMS,KAAKb,EAASS,EAAWC,GALzC,cAKPJ,EALO,OAMbQ,QAAQC,IAAIT,EAASC,MANR,kBAOND,EAASC,MAPH,2CAAH,sDAwBqBS,OAdrB,uCAAG,WAAOlB,EAAIW,GAAX,eAAAN,EAAA,sEACUC,IAAMa,IAAN,UAAajB,EAAb,YAAwBF,GAAMW,GADxC,cACPH,EADO,yBAENA,EAASC,MAFH,2CAAH,wDAc6BW,SAjCxB,SAAAC,GACflB,EAAK,iBAAakB,IAgC+BC,OATvC,uCAAG,WAAOtB,GAAP,iBAAAK,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAFf,SAIUG,IAAMiB,OAAN,UAAgBrB,EAAhB,YAA2BF,GAAMY,GAJ3C,cAIPJ,EAJO,yBAKNA,EAASC,MALH,2CAAH,uDCrBG,GAAEe,MALN,uCAAG,WAAMC,GAAN,eAAApB,EAAA,sEACWC,IAAMS,KAHf,aAG6BU,GAD/B,cACNjB,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCKI,GAAEiB,SALH,uCAAG,4BAAArB,EAAA,sEACGC,IAAMC,IAHV,cAEC,cACToB,EADS,yBAERA,EAAIlB,MAFI,2CAAH,sD,QCkBCmB,EAlBI,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,MAAOxC,EAA+C,EAA/CA,KAAMyC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,QAAkB,EAATjC,GACjE,OACE,sBAAKR,MAAM,qBAAX,UACE,uBAAOyC,QAASA,EAAhB,SACGJ,IAEH,uBACE7B,GAAI6B,EACJxC,KAAMA,EACN2C,KAAMA,EACNF,MAAOA,EACPC,SAAUA,EACVvC,MAAM,qBC0CC0C,EApDG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACDrC,mBAAS,MADR,mBAC9BsC,EAD8B,KAClBC,EADkB,KAG/BC,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfV,EAAQU,EAAOV,MACfE,EAAOQ,EAAOR,KAEpBK,GAAc,SAACI,GACb,OAAO,2BACFA,GADL,kBAEGT,EAAOF,QAkBd,OACE,uBAAMY,SAdM,SAACH,GACbA,EAAMI,iBACN,IAAMC,EAAQ,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAYQ,SACvBC,EAAQ,OAAGT,QAAH,IAAGA,OAAH,EAAGA,EAAYS,SAE7B,IACEV,EAAYS,EAAUC,GACtBR,EAAc,CAAEO,SAAU,GAAIC,SAAU,KACxC,MAAOC,GACP9B,QAAQ+B,MAAMD,KAKhB,UACE,cAAC,EAAD,CACEjB,MAAM,WACNxC,KAAK,OACL2C,KAAK,WACLF,OAAiB,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYQ,WAAY,GAC/Bb,SAAUO,IAEZ,cAAC,EAAD,CACET,MAAM,WACNxC,KAAK,OACL2C,KAAK,WACLF,OAAiB,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYS,WAAY,GAC/Bd,SAAUO,IAEZ,cAAC,EAAD,CAAQjD,KAAK,SAAb,uBCyBS2D,EAtEE,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAAiB,EACCnD,mBAAS,MADV,mBAC5BsC,EAD4B,KAChBC,EADgB,KAG7BC,EAAoB,SAACC,GACzB,IAAMC,EAASD,EAAMC,OACfV,EAAQU,EAAOV,MACfE,EAAOQ,EAAOR,KAEpBK,GAAc,SAACa,GACb,OAAO,2BACFA,GADL,kBAEGlB,EAAOF,QA0BhB,OACE,uBAAMY,SAtBmB,SAACH,GACxBA,EAAMI,iBACN,IACE,IAIMjD,EAAO,CACXO,MALS,OAAGmC,QAAH,IAAGA,OAAH,EAAGA,EAAYnC,MAMxBkD,OALU,OAAGf,QAAH,IAAGA,OAAH,EAAGA,EAAYe,OAMzBC,IALO,OAAGhB,QAAH,IAAGA,OAAH,EAAGA,EAAYgB,KAO1BpC,QAAQC,IAAIvB,GACZuD,EAAWvD,GAEX2C,EAAc,CAAEc,OAAQ,GAAIlD,MAAO,GAAImD,IAAK,KAC5C,MAAON,GACP9B,QAAQ+B,MAAMD,KAKkBtD,MAAM,OAAxC,UACE,cAAC,EAAD,CACEH,KAAK,OACL2C,KAAK,QACLH,MAAM,QACNI,QAAQ,QACRH,OAAiB,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYnC,QAAS,GAC5B8B,SAAUO,IAEZ,cAAC,EAAD,CACEjD,KAAK,OACL2C,KAAK,SACLH,MAAM,SACNI,QAAQ,SACRH,OAAiB,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYe,SAAU,GAC7BpB,SAAUO,IAEZ,cAAC,EAAD,CACEjD,KAAK,OACL2C,KAAK,MACLH,MAAM,MACNI,QAAQ,MACRH,OAAiB,OAAVM,QAAU,IAAVA,OAAA,EAAAA,EAAYgB,MAAO,GAC1BrB,SAAUO,IAEZ,cAAC,EAAD,CAAQjD,KAAK,SAAb,wBChEEgE,EAAYC,IAAMC,YAAW,WAAwBC,GAAS,IAA9BC,EAA6B,EAA7BA,QAASlE,EAAoB,EAApBA,SAAoB,EACnCO,oBAAS,GAD0B,mBAC1D4D,EAD0D,KACjDC,EADiD,KAG3DC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5CK,EAAmB,WACvBJ,GAAYD,IASd,OANAM,8BAAoBR,GAAK,WACvB,MAAO,CACLO,uBAKF,sBAAKE,UAAU,UAAf,UACE,cAAC,EAAD,CACEC,MAAON,EACPvE,KAAK,SACLC,QAASyE,EAHX,SAKGN,IAKH,sBAAKS,MAAOJ,EAAZ,UACGvE,EAED,cAAC,EAAD,CACEF,KAAK,SACLC,QAASyE,EAFX,6BAWRV,EAAUc,YAAc,YAETd,QC/CTnD,EAAU,gBAYD,GAAEkE,WAVD,uCAAG,WAAOpE,EAAIqE,GAAX,eAAAhE,EAAA,sEACCC,IAAMS,KAAN,UAAcb,EAAd,YAAyBF,GAAMqE,GADhC,cACX1C,EADW,yBAEVA,EAAIlB,MAFM,2CAAH,wDAUa6D,aALX,uCAAG,WAAOtE,GAAP,eAAAK,EAAA,sEACDC,IAAMC,IAAN,UAAaL,EAAb,YAAwBF,IADvB,cACb2B,EADa,yBAEZA,EAAIlB,MAFQ,2CAAH,uDC8DH8D,EAlEI,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,QAAc,EAChB3E,mBAAS,MADO,mBACvC4E,EADuC,KAC9BC,EAD8B,OAER7E,mBAAS,MAFD,mBAEvC8E,EAFuC,KAE1BC,EAF0B,KAI9CC,qBAAU,WAAM,4CACd,4BAAAzE,EAAA,sEAC6B0E,EAAeT,aAAaE,EAAWxE,IADpE,OACQsE,EADR,OAEEtD,QAAQC,IAAIqD,GACZO,EAAeP,GAHjB,4CADc,uBAAC,WAAD,wBAMdU,KACC,IA+BH,OACE,qCACE,oBAAIxF,MAAM,aAAV,SAAwBgF,EAAWvE,QACnC,sBAAMT,MAAM,UAAZ,SAAuBgF,EAAWpB,MAClC,uBACA,uBAAM5D,MAAM,aAAZ,UAA0BgF,EAAWS,MAArC,YACA,wBAAQ5F,KAAK,SAASC,QAnCX,WACb,IAAM4F,EAAW,2BACZV,GADY,IAEfS,MAAOT,EAAWS,MAAQ,IAG5BR,EAAQD,EAAWxE,GAAIkF,IA6BkB1F,MAAM,eAA7C,kBACA,uBACA,uBAAMA,MAAM,4BAAZ,sBAAkDgF,EAAWrB,UAC7D,uBACA,oBAAI3D,MAAM,YAAV,sBACA,uBACA,uBAAMkD,SAxBY,SAACH,GACrBA,EAAMI,iBAEN,IACEoC,EAAeX,WAAWI,EAAWxE,GAAI0E,GACzCC,EAAW,MACX,MAAO7B,GACP9B,QAAQ+B,MAAMD,KAiBd,UACE,uBAAOzD,KAAK,OAAO0C,SAjCJ,SAACQ,GACpB,IAAMmC,EAAU,CACdL,QAAS9B,EAAMC,OAAOV,OAExB6C,EAAWD,GACX1D,QAAQC,IAAIyD,IA4BmC1C,KAAK,UAAUxC,MAAM,eAAe2F,mBAAiB,mBAChG,wBAAQ9F,KAAK,SAASG,MAAM,yBAA5B,4BAEF,uBACCoF,EAAcA,EAAYQ,KAAI,SAAAV,GAAO,OACpC,oBAAqBlF,MAAM,kBAA3B,SAA8CkF,EAAQL,SAA7CK,EAAQ1E,OACf,SChDGqF,EAAkB,SAACC,EAASC,GACvC,8CAAO,WAAOC,GAAP,SAAAnF,EAAA,sDACLmF,EAAS,CACPnG,KAAM,cACNoB,KAAK,CACH6E,UACAC,MAAOE,YAAW,WAChBD,EAASE,EAAmB,OACnB,IAARH,MAPF,2CAAP,uDAaWG,EAAqB,WAChC,MAAO,CACLrG,KAAM,mBAIKsG,EAnCa,WAAmC,IAAlCC,EAAiC,uDAFzC,GAE8BC,EAAW,uCAG5D,OAFA7E,QAAQC,IAAI,UAAW2E,GACvB5E,QAAQC,IAAI,SAAU4E,GACfA,EAAOxG,MACZ,IAAK,cAEH,OADAyG,aAAaF,EAAML,OACZM,EAAOpF,KAEhB,IAAK,iBACH,MAXe,GAYjB,QACE,OAAOmF,I,QC8BAG,EAAW,SAAC/F,EAAIW,GAC3B,8CAAO,WAAO6E,GAAP,eAAAnF,EAAA,sEACc2F,EAAY9E,OAAOlB,EAAIW,GADrC,OACCjB,EADD,OAEL8F,EAAS,CACPnG,KAAM,YACNoB,KAAMf,IAJH,2CAAP,uDASWuG,EAAU,SAACjG,GACtB,8CAAO,WAAOwF,GAAP,eAAAnF,EAAA,sEACC2F,EAAY1E,OAAOtB,GADpB,uBAEcgG,EAAY5F,SAF1B,OAECV,EAFD,OAGL8F,EAAS,CACPnG,KAAM,YACNoB,KAAMf,IALH,2CAAP,uDAUawG,EA9DK,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCAG1C,OAFA7E,QAAQC,IAAI,cAAe2E,GAC3B5E,QAAQC,IAAI,SAAU4E,GACdA,EAAOxG,MACb,IAAK,YACH,OAAOwG,EAAOpF,KAEhB,IAAK,WAGL,IAAK,YACH,MAAM,GAAN,mBAAWmF,GAAX,CAAkBC,EAAOpF,OAK3B,QACE,OAAOmF,ICPAO,EAAY,SAAC1E,GACxB,8CAAO,WAAO+D,GAAP,eAAAnF,EAAA,sEACc+F,EAAa5E,MAAMC,GADjC,OACC4E,EADD,OAELb,EAAS,CACPnG,KAAM,QACNoB,KAAM4F,IAJH,2CAAP,uDASaC,EApBK,WAA2B,IAA1BV,EAAyB,uDAAjB,KAAMC,EAAW,uCAC5C,OAAQA,EAAOxG,MACb,IAAK,QACH,OAAOwG,EAAOpF,KAEhB,QACE,OAAOmF,ICcEW,EApBM,WAAyB,IAAxBX,EAAuB,uDAAf,GAAIC,EAAW,uCAC3C,OAAQA,EAAOxG,MACb,IAAK,QACH,OAAOwG,EAAOpF,KAEhB,QACE,OAAOmF,ICQEY,EAbM,WACnB,IAAMC,EAAeC,aAAY,SAAAd,GAAK,OAAIA,EAAMa,gBAChD,OACE,mCAEI,8BACGA,O,OCqBIE,EAnBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACI,mCACGA,EAAMxB,KAAI,SAAAiB,GAAI,OACb,mCACE,+BACE,6BACE,cAAC,IAAD,CAAoBtG,GAAE,iBAAYsG,EAAKrG,IAAvC,SACGqG,EAAKrE,MADGqE,EAAKrG,MAIlB,6BAAKqG,EAAKQ,MAAMC,oBCHfC,EAhBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qCACE,oBAAIxH,MAAM,YAAV,SAAuBwH,EAAShF,OAChC,mBAAGxC,MAAM,YAAT,yBACCwH,EAASH,MAAMzB,KAAI,SAAA1F,GAAI,OACtB,6BACE,cAAC,IAAD,CAAMK,GAAE,iBAAYL,EAAKM,IAAMR,MAAM,iBAArC,SACGE,EAAKO,SAFDP,EAAKM,WCuOPiH,EAlNH,WACV,IAAMzB,EAAW0B,cAIXC,EAAc7D,IAAM8D,YAGpBf,EAAOK,aAAY,SAAAd,GAAK,OAAIA,EAAMS,QAClCO,EAAQF,aAAY,SAAAd,GAAK,OAAIA,EAAMgB,SACnCzE,EAAW,uCAAG,WAAOS,EAAUC,GAAjB,SAAAxC,EAAA,sEAEhBmF,EAASW,EAAU,CACjBvD,WAAUC,cAEZ2C,EJhCJ,uCAAO,WAAOA,GAAP,eAAAnF,EAAA,sEACegH,EAAa3F,WAD5B,OACCkF,EADD,OAELpB,EAAS,CACPnG,KAAM,QACNoB,KAAMmG,IAJH,2CAAP,uDIkCIU,OAAOC,aAAaC,QAClB,oBAAqBC,KAAKC,UAAUrB,IARtB,SAUVL,EAAY5E,SAASiF,EAAKlG,OAVhB,uDAahBkF,EAAgB,oBAAqB,GAbrB,yDAAH,wDAgBjBP,qBAAU,WACewC,OAAOC,aAAaI,QAAQ,uBAMlD,IAGH7C,qBAAU,WACRU,EN3CF,uCAAO,WAAOA,GAAP,eAAAnF,EAAA,sEACc2F,EAAY5F,SAD1B,OACCV,EADD,OAEL8F,EAAS,CACPnG,KAAM,YACNoB,KAAMf,IAJH,2CAAP,yDM4CG,IAEH,IAAMmH,EAAQH,aAAY,SAAAd,GAAK,OAAIA,EAAMlG,QACzCsB,QAAQC,IAAI4F,GAiBZ,IAAMe,EAAY,uCAAG,WAAOrF,GAAP,SAAAlC,EAAA,sDACnBkC,EAAMI,iBAGN2E,OAAOC,aAAaM,WAAW,qBAC/B7B,EAAY5E,SAAS,IALF,2CAAH,sDAwBZqD,EAAO,uCAAG,WAAOzE,EAAIW,GAAX,SAAAN,EAAA,+EAENmF,EAASO,EAAS/F,EAAIW,IAFhB,OAGZ0E,EAAgB,QAAS,GAHb,+CAKZA,EAAgB,KAAM,GALV,wDAAH,wDA0BPzF,EAAU,uCAAG,WAAOI,GAAP,SAAAK,EAAA,mEAEXiH,OAAOQ,QAAQ,WAFJ,gCAGPtC,EAASS,EAAQjG,IAHV,OAMfqF,EAAgB,sBAAuB,GANxB,gDAQfrE,QAAQ+B,MAAR,MACAsC,EAAgB,MAAO,GATR,yDAAH,sDA6BV0C,EAAQC,YAAc,cACtBhB,EAAWe,EACfnB,EAAMqB,MAAK,SAAA5B,GAAI,OAAIA,EAAKrG,KAAO+H,EAAMG,OAAOlI,MAC5C,KAEImI,EAAYH,YAAc,cAC1BxD,EAAa2D,EACjBtB,EAAMoB,MAAK,SAAAvI,GAAI,OAAIA,EAAKM,KAAOmI,EAAUD,OAAOlI,MAChD,KAGF,OAAa,OAATqG,EAEA,iCACE,8BACE,yDAEF,cAAC,EAAD,IACA,cAAC,EAAD,CAAWlE,YAAaA,OAM5B,qCACE,qBAAK3C,MAAM,gDAAX,SACE,sBAAKA,MAAM,kBAAX,UACE,mBAAGA,MAAM,eAAe4I,KAAK,SAA7B,mBACA,mBAAG5I,MAAM,eAAe4I,KAAK,SAA7B,mBACA,iCAAO/B,EAAKrE,KAAZ,aACA,wBAAQxC,MAAM,iBAAiBF,QAASsI,EAAxC,4BAGJ,8BACE,oBAAIpI,MAAM,cAAV,qBAEF,cAAC,EAAD,IACA,eAAC,IAAD,WACE,eAAC,IAAD,CAAO6I,OAAK,EAACC,KAAK,IAAlB,UACE,8BACE,oBAAI9I,MAAM,6BAAV,qBAEF,uBAAOA,MAAM,QAAb,SACE,kCACE,+BACE,uBACA,oBAAI+I,MAAM,MAAV,8BAEF,cAAC,EAAD,CAAO3B,MAAOA,SAGlB,gCACE,oBAAIpH,MAAM,gBAAV,wBACA,cAAC,EAAD,CAAWiE,QAAQ,WAAWD,IAAK2D,EAAnC,SACE,cAAC,EAAD,CAAUlE,WA5HN,SAACtC,GACf6E,ENjEmB,SAAC7E,GACtB,8CAAO,WAAO6E,GAAP,eAAAnF,EAAA,sEACc2F,EAAYtF,OAAOC,GADjC,OACCjB,EADD,OAEL8F,EAAS,CACPnG,KAAM,WACNoB,KAAMf,IAJH,2CAAP,sDMgEW8I,CAAQ7H,IACjB0E,EAAgB,mBAAoB,WA6H7BwB,EAAM4B,MAAK,SAACpI,EAAGqI,GAAJ,OAAUA,EAAEzD,MAAQ5E,EAAE4E,SAC/BG,KAAI,SAAA1F,GAAI,OACT,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,WAAY8E,EAAS7E,WAAYA,EAAYC,UAAWwG,EAAKzD,UAAlFlD,EAAKM,UAGpB,cAAC,IAAD,CAAOsI,KAAK,aAAZ,SACE,cAAC,EAAD,CAAUtB,SAAUA,MAEtB,cAAC,IAAD,CAAOsB,KAAK,aAAZ,SACE,cAAC,EAAD,CAAY9D,WAAYA,EAAYC,QAASA,a,wBCjOjDkE,EAAUC,0BAAgB,CAC9BnC,aAAcd,EACdjG,KAAMwG,EACNG,KAAMC,EACNM,MAAOL,IAGIsC,EAAQC,sBACnBH,EACAI,8BACEC,0BAAgBC,OCXpBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,W","file":"static/js/main.6f7e5626.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ type, onClick, children }) => {\r\n  return (\r\n  <button type={type} onClick={onClick} class=\"btn btn-outline-warning\">\r\n    {children}\r\n  </button>\r\n  )\r\n}\r\n\r\nexport default Button\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n}\r\n","import React, { useState } from 'react'\r\nimport Button from \"./Button\"\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nconst Blog = ({blog, updateLike, removeBlog, usercheck}) => {\r\n  const [blogVisible, setBlogVisible] = useState(false)\r\n\r\n  const toggleVisibility = () => {\r\n    setBlogVisible(!blogVisible)\r\n  }\r\n\r\n  const update = () => {\r\n    const updatedBlog = {\r\n      ...blog,\r\n      likes: blog.likes + 1,\r\n    }\r\n\r\n    updateLike(blog.id, updatedBlog)\r\n  }\r\n\r\n  const offBlog = () => {\r\n    const id = blog.id\r\n    removeBlog(id)\r\n  }\r\n  \r\n  return (\r\n    <main>\r\n      <div>\r\n        <Link to={`/blogs/${blog.id}`} class=\"btn btn-primary\">\r\n          {blog.title} \r\n        </Link>\r\n        {/* {blog.author}\r\n        <Button type=\"button\" onClick={toggleVisibility}>\r\n          {!blogVisible ? <span>view</span> : <span>hide</span>}\r\n        </Button> */}\r\n        {/* <Button type=\"button\" onClick={update}>\r\n          Like\r\n        </Button> */}\r\n      </div>\r\n      {/* {blogVisible ? ( */}\r\n        {/* <div>\r\n          <span>{blog.url}</span><br/>\r\n          <span className=\"test\">{blog.likes}</span><br/>\r\n          {blog?.user?.username === usercheck ? (\r\n            <Button type=\"button\" onClick={offBlog}>\r\n              remove\r\n            </Button>\r\n          ) : null}         \r\n        </div> */}\r\n      {/* ) : null} */}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n\r\n// Blog.propTypes = {\r\n//   blog: PropTypes.shape({\r\n//     title: PropTypes.string.isRequired,\r\n//     author: PropTypes.string.isRequired,\r\n//     url: PropTypes.string.isRequired,\r\n//     likes: PropTypes.number,\r\n//   }),\r\n//   updateLike: PropTypes.func.isRequired,\r\n//   removeBlog: PropTypes.func.isRequired,\r\n//   user: PropTypes.shape({\r\n//     token: PropTypes.string,\r\n//     username: PropTypes.string,\r\n//     name: PropTypes.string,\r\n//   }),\r\n// }\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  console.log(response.data)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\r\n  return response.data\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\n\r\nexport default { getAll, create, update, setToken, remove }\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/login\"\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }\r\n","import axios from \"axios\"\r\nconst baseUrl = \"/api/users\"\r\n\r\nconst getUsers = async () => {\r\n  const res = await axios.get(baseUrl)\r\n  return res.data\r\n}\r\n\r\nexport default { getUsers }\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst InputField = ({ label, type, value, onChange, name, htmlFor, id }) => {\r\n  return (\r\n    <div class=\"form-floating mb-3\">\r\n      <label htmlFor={htmlFor}>\r\n        {label}\r\n      </label>\r\n      <input\r\n        id={label}\r\n        type={type}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        class=\"form-control\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputField\r\n\r\nInputField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n}\r\n","import React, { useState } from 'react'\r\nimport InputField from './InputField.js'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n  const [inputValue, setInputValue] = useState(null)\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n\r\n    setInputValue((prevValues) => {\r\n      return {\r\n        ...prevValues,\r\n        [name]: value,\r\n      }\r\n    })\r\n  }\r\n\r\n  const login = (event) => {\r\n    event.preventDefault()\r\n    const username = inputValue?.username\r\n    const password = inputValue?.password\r\n\r\n    try {\r\n      handleLogin(username, password)\r\n      setInputValue({ username: \"\", password: \"\" })\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={login}>\r\n      <InputField\r\n        label=\"Username\"\r\n        type=\"text\"\r\n        name=\"username\"\r\n        value={inputValue?.username || \"\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <InputField\r\n        label=\"Password\"\r\n        type=\"text\"\r\n        name=\"password\"\r\n        value={inputValue?.password || \"\"}\r\n        onChange={handleInputChange}\r\n      />\r\n      <Button type=\"submit\">\r\n        Login\r\n      </Button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n\r\nLoginForm.propTypes = {\r\n  handleLogin: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport InputField from \"./InputField\"\r\nimport Button from \"./Button\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogForm = ({ createBlog }) => {\r\n  const [inputValue, setInputValue] = useState(null)\r\n\r\n  const handleInputChange = (event) => {\r\n    const target = event.target\r\n    const value = target.value\r\n    const name = target.name\r\n\r\n    setInputValue((preV) => {\r\n      return {\r\n        ...preV,\r\n        [name]: value,\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleCreateBlog = (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const title = inputValue?.title\r\n      const author = inputValue?.author\r\n      const url = inputValue?.url\r\n\r\n      const blog = {\r\n        title,\r\n        author,\r\n        url,\r\n    }\r\n    console.log(blog)\r\n    createBlog(blog)\r\n\r\n    setInputValue({ author: \"\", title: \"\", url: \"\"})\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n}\r\n\r\nreturn (\r\n  <form onSubmit={handleCreateBlog} class=\"mb-3\">\r\n    <InputField\r\n      type=\"text\"\r\n      name=\"title\"\r\n      label=\"title\"\r\n      htmlFor=\"title\"\r\n      value={inputValue?.title || \"\"}\r\n      onChange={handleInputChange}\r\n    />\r\n    <InputField\r\n      type=\"text\"\r\n      name=\"author\"\r\n      label=\"author\"\r\n      htmlFor=\"author\"\r\n      value={inputValue?.author || \"\"}\r\n      onChange={handleInputChange}\r\n    />\r\n    <InputField\r\n      type=\"text\"\r\n      name=\"url\"\r\n      label=\"url\"\r\n      htmlFor=\"url\"\r\n      value={inputValue?.url || \"\"}\r\n      onChange={handleInputChange}\r\n    />\r\n    <Button type=\"submit\">\r\n      Create\r\n    </Button>\r\n  </form>\r\n)\r\n}\r\n\r\nexport default BlogForm\r\n\r\nBlogForm.propTypes = {\r\n  createBlog: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState, forwardRef, useImperativeHandle } from 'react'\r\nimport Button from './Button'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef(({ btnText, children }, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className=\"newblog\">\r\n      <Button\r\n        style={hideWhenVisible}\r\n        type=\"button\"\r\n        onClick={toggleVisibility}\r\n      >\r\n        {btnText}\r\n      </Button>\r\n      {/* <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div> */}\r\n      <div style={showWhenVisible}>\r\n        {children}\r\n        {/* <button onClick={toggleVisibility}>cancel</button> */}\r\n        <Button\r\n          type=\"button\"\r\n          onClick={toggleVisibility}\r\n        >\r\n          cancel\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.displayName = \"Togglable\"\r\n\r\nexport default Togglable\r\n\r\nTogglable.propTypes = {\r\n  btnText: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/comments'\r\n\r\nconst addComment = async (id, content) => {\r\n  const res = await axios.post(`${baseUrl}/${id}`, content)\r\n  return res.data\r\n}\r\n\r\nconst fetchComment = async (id) => {\r\n  const res = await axios.get(`${baseUrl}/${id}`)\r\n  return res.data\r\n}\r\n\r\nexport default { addComment, fetchComment }\r\n","import React, { useState, useEffect } from \"react\"\r\nimport blogService from \"../services/blogs\"\r\nimport commentService from \"../services/comment\"\r\n\r\nconst Blogdetail = ({ blogdetail, addLike }) => {\r\n  const [comment, setComment] = useState(null)\r\n  const [showcomment, setShowComment] = useState(null)\r\n\r\n  useEffect(() => {\r\n    async function fetch() {\r\n      const fetchComment = await commentService.fetchComment(blogdetail.id)\r\n      console.log(fetchComment)\r\n      setShowComment(fetchComment)  \r\n    }\r\n    fetch();\r\n  }, [])\r\n\r\n  const update = () => {\r\n    const updatedBlog = {\r\n      ...blogdetail,\r\n      likes: blogdetail.likes + 1,\r\n    }\r\n\r\n    addLike(blogdetail.id, updatedBlog)\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const comment = {\r\n      content: event.target.value\r\n    }\r\n    setComment(comment)\r\n    console.log(comment)\r\n  }\r\n\r\n  const handleComment = (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      commentService.addComment(blogdetail.id, comment)\r\n      setComment(null)\r\n    } catch (err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2 class=\"fst-italic\">{blogdetail.title}</h2>\r\n      <span class=\"lh-base\">{blogdetail.url}</span>\r\n      <br/>\r\n      <span class=\"text-start\">{blogdetail.likes} likes</span>\r\n      <button type=\"button\" onClick={update} class=\"btn btn-dark\">like</button>\r\n      <br/>\r\n      <span class=\"text-decoration-underline\">added by {blogdetail.author}</span>\r\n      <br/>\r\n      <h3 class=\"fw-normal\">comments</h3>\r\n      <br/>\r\n      <form onSubmit={handleComment}>\r\n        <input type=\"text\" onChange={handleChange} name=\"comment\" class=\"form-control\" aria-describedby=\"addon-wrapping\"/>\r\n        <button type=\"submit\" class=\"btn btn-primary btn-lg\">add comment</button>\r\n      </form>\r\n      <br/>\r\n      {showcomment ? showcomment.map(comment =>\r\n        <li key={comment.id} class=\"list-group-item\">{comment.content}</li>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Blogdetail\r\n","const initialState = \"\";\r\n\r\nconst notificationReducer = (state = initialState, action) => {\r\n  console.log(\"state: \", state)\r\n  console.log(\"action\", action)\r\n  switch(action.type) {\r\n    case \"SET_MESSAGE\": {\r\n      clearTimeout(state.delay);\r\n      return action.data;\r\n    }\r\n    case \"REMOVE_MESSAGE\":\r\n      return initialState\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport const setNotification = (message, delay) => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: \"SET_MESSAGE\",\r\n      data:{\r\n        message,\r\n        delay: setTimeout(() => {\r\n          dispatch(removeNotification(\"\"));\r\n        }, delay * 1000),\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const removeNotification = () => {\r\n  return {\r\n    type: \"REMOVE_MESSAGE\",\r\n  };\r\n};\r\n\r\nexport default notificationReducer\r\n","import blogService from '../services/blogs'\r\n\r\nconst blogReducer = (state = [], action) => {\r\n  console.log('state now: ', state)\r\n  console.log('action', action)\r\n  switch (action.type) {\r\n    case \"INIT_BLOG\": {\r\n      return action.data\r\n    }\r\n    case \"NEW_BLOG\": {\r\n      return [...state, action.data]\r\n    }\r\n    case \"LIKE_BLOG\": {\r\n      return [...state, action.data]\r\n    }\r\n    // case \"REMOVE_BLOG\": {\r\n    //   return [...state, action.data]\r\n    // }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport const initBlog = () => {\r\n  return async (dispatch) => {\r\n    const blog = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOG\",\r\n      data: blog\r\n    })  \r\n  }\r\n}\r\n\r\nexport const newBlog = (newObject) => {\r\n  return async (dispatch) => {\r\n    const blog = await blogService.create(newObject)\r\n    dispatch({\r\n      type: \"NEW_BLOG\",\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const likeBlog = (id, newObject) => {\r\n  return async (dispatch) => {\r\n    const blog = await blogService.update(id, newObject)\r\n    dispatch({\r\n      type: \"LIKE_BLOG\",\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport const delBlog = (id) => {\r\n  return async (dispatch) => {\r\n    await blogService.remove(id)\r\n    const blog = await blogService.getAll()\r\n    dispatch({\r\n      type: \"INIT_BLOG\",\r\n      data: blog\r\n    })\r\n  }\r\n}\r\n\r\nexport default blogReducer\r\n","import loginService from '../services/login'\r\n\r\nconst userReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\": {\r\n      return action.data\r\n    }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport const userLogin = (credentials) => {\r\n  return async (dispatch) => {\r\n    const user = await loginService.login(credentials)\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      data: user\r\n    })\r\n  }\r\n}\r\n\r\nexport default userReducer\r\n","import usersService from \"../services/users\"\r\n\r\nconst usersReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"FETCH\": {\r\n      return action.data\r\n    }\r\n    default: \r\n      return state\r\n  };\r\n};\r\n\r\nexport const userFetch = () => {\r\n  return async (dispatch) => {\r\n    const users = await usersService.getUsers()\r\n    dispatch({\r\n      type: \"FETCH\",\r\n      data: users\r\n    })\r\n  }\r\n}\r\n\r\nexport default usersReducer\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notification)\r\n  return (\r\n    <>\r\n      { {notification} ? (\r\n        <div>\r\n          {notification}\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React from \"react\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useHistory,\r\n} from \"react-router-dom\"\r\n\r\nconst Users = ({ users }) => {  \r\n  return (\r\n      <>\r\n        {users.map(user =>\r\n          <>\r\n            <tr>\r\n              <td>\r\n                <Link key={user.id} to={`/users/${user.id}`}>\r\n                  {user.name}\r\n                </Link>\r\n              </td>\r\n              <td>{user.blogs.length}</td>\r\n            </tr>\r\n          </>\r\n        )}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Users\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst UserBlog = ({ userBlog }) => {\r\n  return (\r\n    <>\r\n      <h2 class=\"display-2\">{userBlog.name}</h2>\r\n      <p class=\"fw-bolder\">added blogs</p>\r\n      {userBlog.blogs.map(blog =>\r\n        <li key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`} class=\"stretched-link\">\r\n            {blog.title}\r\n          </Link>\r\n        </li>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserBlog\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from \"./services/login\"\r\nimport usersService from \"./services/users\"\r\nimport LoginForm from './components/LoginForm'\r\nimport BlogForm from './components/BlogForm'\r\nimport Togglable from './components/Togglable'\r\nimport Blogdetail from \"./components/Blogdetail\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport notificationReducer, { setNotification } from \"./reducers/notificationReducer\"\r\nimport { initBlog, newBlog, likeBlog, delBlog } from \"./reducers/blogReducer\"\r\nimport { userLogin } from \"./reducers/userReducer\"\r\nimport { userFetch } from \"./reducers/usersReducer\"\r\nimport Notification from \"./components/Notification\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect,\r\n  useRouteMatch,\r\n  useHistory,\r\n} from \"react-router-dom\"\r\nimport Users from \"./components/Users\"\r\nimport UserBlog from \"./components/UserBlog\"\r\n\r\n// still need to work on\r\n// notification, logout, aesthetic, backend comment database\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch()\r\n  // const [blogs, setBlogs] = useState([])\r\n  // const [user, setUser] = useState(null)\r\n\r\n  const blogFormRef = React.createRef()\r\n  \r\n  // login\r\n  const user = useSelector(state => state.user)\r\n  const users = useSelector(state => state.users)  \r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      dispatch(userLogin({\r\n        username, password,\r\n      }))\r\n      dispatch(userFetch())\r\n\r\n      window.localStorage.setItem(\r\n        \"loggedBlogappUser\", JSON.stringify(user)\r\n      )\r\n      await blogService.setToken(user.token)\r\n      // setUser(user)\r\n    } catch (err) {\r\n      setNotification(\"Wrong credentials\", 5)\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem(\"loggedBlogappUser\")\r\n    // if (loggedUserJSON) {\r\n    //   const user = JSON.parse(loggedUserJSON)\r\n    //   // setUser(user)\r\n    //   blogService.setToken(user.token)\r\n    // }\r\n  }, [])\r\n\r\n  // fetch blogs\r\n  useEffect(() => {\r\n    dispatch(initBlog())\r\n  }, [])\r\n\r\n  const blogs = useSelector(state => state.blog)\r\n  console.log(blogs)\r\n\r\n  // useEffect(() => {\r\n  //   setBlogs(blog)\r\n  // }, [blog])\r\n  // console.log(blogs)\r\n\r\n\r\n  // useEffect(() => {\r\n  //   blogService.getAll().then(blogs =>\r\n  //     setBlogs(blogs)\r\n  //   )  \r\n  // }, [])\r\n\r\n  \r\n\r\n\r\n  const handleLogout = async (event) => {\r\n    event.preventDefault()\r\n\r\n    \r\n    window.localStorage.removeItem(\"loggedBlogappUser\")\r\n    blogService.setToken(\"\")\r\n    // setUser(null)\r\n  }\r\n\r\n  const addBlog = (newObject) => {\r\n    dispatch(newBlog(newObject))\r\n    setNotification(\"A new blog added\", 5)\r\n  }\r\n\r\n  // add functions\r\n  // const addBlog = async (blogObject) => {\r\n  //   await console.log(blogObject)\r\n  //   await blogService.create(blogObject)\r\n  //   const updatedBlogs = await blogService.getAll()\r\n  //   await console.log(updatedBlogs)\r\n  //   setBlogs(updatedBlogs)\r\n  //   setNotification(\"A new blog added\", 5)\r\n  // }\r\n\r\n  const addLike = async (id, newObject) => {\r\n    try {\r\n      await dispatch(likeBlog(id, newObject))\r\n      setNotification(\"liked\", 5)\r\n    } catch (err) {\r\n      setNotification(\"no\", 5)\r\n    }\r\n  }\r\n\r\n  // const addLike = async (id, blogObject) => {\r\n  //   try {\r\n  //     await blogService.update(id, blogObject)\r\n\r\n  //     const updatedBlog = {\r\n  //       ...blogObject,\r\n  //       id,\r\n  //     }\r\n\r\n  //     setBlogs(blogs.map((blog) => (blog.id !== id ? blog : updatedBlog)))\r\n  //     setNotification(\"liked\", 5)\r\n  //   } catch (err) {\r\n  //     console.error(err)\r\n  //     setNotification(\"no\", 5)\r\n  //   }\r\n  // }\r\n\r\n  const removeBlog = async (id) => {\r\n    try {\r\n      if (window.confirm(\"remove?\")) {\r\n        await dispatch(delBlog(id))\r\n        // console.log(\"after del\", blog)\r\n      }\r\n      setNotification(\"remove successfully\", 5)\r\n    } catch (err) {\r\n      console.error(err)\r\n      setNotification(\"no!\", 5)\r\n    }\r\n  }\r\n\r\n  // const removeBlog = async (id) => {\r\n  //   try {\r\n  //     const blog = blogs.filter((blog) => blog.id === id)\r\n\r\n  //     if (window.confirm(\"remove?\")) {\r\n  //       await blogService.remove(id)\r\n\r\n  //       setBlogs(blogs.filter((blog) => blog.id !== id))\r\n  //     }\r\n  //     setNotification(\"remove successfully\", 5)\r\n  //   } catch (err) {\r\n  //     console.error(err)\r\n  //     setNotification(\"no!\", 5)\r\n  //   }\r\n  // }\r\n  // route match\r\n  const match = useRouteMatch(\"/users/:id\")\r\n  const userBlog = match ? \r\n    users.find(user => user.id === match.params.id) :\r\n    null\r\n\r\n  const blogmatch = useRouteMatch(\"/blogs/:id\")\r\n  const blogdetail = blogmatch ?\r\n    blogs.find(blog => blog.id === blogmatch.params.id) :\r\n    null\r\n\r\n\r\n  if (user === null) {\r\n    return (\r\n      <main>\r\n        <div>\r\n          <h2>Log in to application</h2>\r\n        </div>\r\n        <Notification />\r\n        <LoginForm handleLogin={handleLogin} />\r\n      </main>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <div class=\"container-fluid\">\r\n          <a class=\"navbar-brand\" href=\"/blogs\">blogs</a>\r\n          <a class=\"navbar-brand\" href=\"/users\">users</a>\r\n          <span>{user.name} logged in \r\n          <button class=\"navbar-toggler\" onClick={handleLogout}>logout</button></span>\r\n        </div>\r\n      </nav>\r\n      <div>\r\n        <h2 class=\"text-center\">blogs</h2>\r\n      </div>\r\n      <Notification />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div>\r\n            <h2 class=\"badge bg-primary text-wrap\">Users</h2>\r\n          </div>\r\n          <table class=\"table\">\r\n            <tbody>\r\n              <tr>\r\n                <th></th>\r\n                <th scope=\"col\">blogs created</th>\r\n              </tr>\r\n              <Users users={users} />\r\n            </tbody>\r\n          </table>\r\n          <div>\r\n            <h2 class=\"text-sm-start\">create new</h2>\r\n            <Togglable btnText=\"New Blog\" ref={blogFormRef}>\r\n              <BlogForm createBlog={addBlog} />\r\n            </Togglable>\r\n          </div>\r\n          {blogs.sort((a, b) => b.likes - a.likes)\r\n            .map(blog =>\r\n            <Blog key={blog.id} blog={blog} updateLike={addLike} removeBlog={removeBlog} usercheck={user.username}/>\r\n          )}\r\n        </Route>\r\n        <Route path=\"/users/:id\">\r\n          <UserBlog userBlog={userBlog} />\r\n        </Route>\r\n        <Route path=\"/blogs/:id\">\r\n          <Blogdetail blogdetail={blogdetail} addLike={addLike} />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport notificationReducer from \"./reducers/notificationReducer\"\r\nimport blogReducer from \"./reducers/blogReducer\";\r\nimport userReducer from \"./reducers/userReducer\"\r\nimport usersReducer from \"./reducers/usersReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  notification: notificationReducer,\r\n  blog: blogReducer,\r\n  user: userReducer,\r\n  users: usersReducer\r\n})\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport { store } from \"./store\"\r\nimport { BrowserRouter as Router } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>, \r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}